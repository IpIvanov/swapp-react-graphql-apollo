// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components | Header renders without crashing 1`] = `
<div
  className="makeStyles-container-1 makeStyles-container-7"
>
  <WithStyles(ForwardRef(Typography))
    className="makeStyles-linkHome-4"
    onClick={[Function]}
  >
    <ForwardRef(Typography)
      className="makeStyles-linkHome-4"
      classes={
        Object {
          "alignCenter": "MuiTypography-alignCenter",
          "alignJustify": "MuiTypography-alignJustify",
          "alignLeft": "MuiTypography-alignLeft",
          "alignRight": "MuiTypography-alignRight",
          "body1": "MuiTypography-body1",
          "body2": "MuiTypography-body2",
          "button": "MuiTypography-button",
          "caption": "MuiTypography-caption",
          "colorError": "MuiTypography-colorError",
          "colorInherit": "MuiTypography-colorInherit",
          "colorPrimary": "MuiTypography-colorPrimary",
          "colorSecondary": "MuiTypography-colorSecondary",
          "colorTextPrimary": "MuiTypography-colorTextPrimary",
          "colorTextSecondary": "MuiTypography-colorTextSecondary",
          "displayBlock": "MuiTypography-displayBlock",
          "displayInline": "MuiTypography-displayInline",
          "gutterBottom": "MuiTypography-gutterBottom",
          "h1": "MuiTypography-h1",
          "h2": "MuiTypography-h2",
          "h3": "MuiTypography-h3",
          "h4": "MuiTypography-h4",
          "h5": "MuiTypography-h5",
          "h6": "MuiTypography-h6",
          "noWrap": "MuiTypography-noWrap",
          "overline": "MuiTypography-overline",
          "paragraph": "MuiTypography-paragraph",
          "root": "MuiTypography-root",
          "srOnly": "MuiTypography-srOnly",
          "subtitle1": "MuiTypography-subtitle1",
          "subtitle2": "MuiTypography-subtitle2",
        }
      }
      onClick={[Function]}
    >
      <p
        className="MuiTypography-root makeStyles-linkHome-4 MuiTypography-body1"
        onClick={[Function]}
      >
        SWAPP
      </p>
    </ForwardRef(Typography)>
  </WithStyles(ForwardRef(Typography))>
  <div
    className="makeStyles-rightHeader-2"
  >
    <WithStyles(ForwardRef(Link))
      className="makeStyles-link-3 makeStyles-link-8"
      href="/"
      onClick={[Function]}
      underline="none"
    >
      <ForwardRef(Link)
        className="makeStyles-link-3 makeStyles-link-8"
        classes={
          Object {
            "button": "MuiLink-button",
            "focusVisible": "Mui-focusVisible",
            "root": "MuiLink-root",
            "underlineAlways": "MuiLink-underlineAlways",
            "underlineHover": "MuiLink-underlineHover",
            "underlineNone": "MuiLink-underlineNone",
          }
        }
        href="/"
        onClick={[Function]}
        underline="none"
      >
        <WithStyles(ForwardRef(Typography))
          className="MuiLink-root MuiLink-underlineNone makeStyles-link-3 makeStyles-link-8"
          color="primary"
          component="a"
          href="/"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          variant="inherit"
        >
          <ForwardRef(Typography)
            className="MuiLink-root MuiLink-underlineNone makeStyles-link-3 makeStyles-link-8"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter",
                "alignJustify": "MuiTypography-alignJustify",
                "alignLeft": "MuiTypography-alignLeft",
                "alignRight": "MuiTypography-alignRight",
                "body1": "MuiTypography-body1",
                "body2": "MuiTypography-body2",
                "button": "MuiTypography-button",
                "caption": "MuiTypography-caption",
                "colorError": "MuiTypography-colorError",
                "colorInherit": "MuiTypography-colorInherit",
                "colorPrimary": "MuiTypography-colorPrimary",
                "colorSecondary": "MuiTypography-colorSecondary",
                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                "displayBlock": "MuiTypography-displayBlock",
                "displayInline": "MuiTypography-displayInline",
                "gutterBottom": "MuiTypography-gutterBottom",
                "h1": "MuiTypography-h1",
                "h2": "MuiTypography-h2",
                "h3": "MuiTypography-h3",
                "h4": "MuiTypography-h4",
                "h5": "MuiTypography-h5",
                "h6": "MuiTypography-h6",
                "noWrap": "MuiTypography-noWrap",
                "overline": "MuiTypography-overline",
                "paragraph": "MuiTypography-paragraph",
                "root": "MuiTypography-root",
                "srOnly": "MuiTypography-srOnly",
                "subtitle1": "MuiTypography-subtitle1",
                "subtitle2": "MuiTypography-subtitle2",
              }
            }
            color="primary"
            component="a"
            href="/"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            variant="inherit"
          >
            <a
              className="MuiTypography-root MuiLink-root MuiLink-underlineNone makeStyles-link-3 makeStyles-link-8 MuiTypography-colorPrimary"
              href="/"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
            >
              Episodes
            </a>
          </ForwardRef(Typography)>
        </WithStyles(ForwardRef(Typography))>
      </ForwardRef(Link)>
    </WithStyles(ForwardRef(Link))>
    <WithStyles(ForwardRef(Link))
      className="makeStyles-link-3 makeStyles-link-8"
      href="/"
      onClick={[Function]}
      underline="none"
    >
      <ForwardRef(Link)
        className="makeStyles-link-3 makeStyles-link-8"
        classes={
          Object {
            "button": "MuiLink-button",
            "focusVisible": "Mui-focusVisible",
            "root": "MuiLink-root",
            "underlineAlways": "MuiLink-underlineAlways",
            "underlineHover": "MuiLink-underlineHover",
            "underlineNone": "MuiLink-underlineNone",
          }
        }
        href="/"
        onClick={[Function]}
        underline="none"
      >
        <WithStyles(ForwardRef(Typography))
          className="MuiLink-root MuiLink-underlineNone makeStyles-link-3 makeStyles-link-8"
          color="primary"
          component="a"
          href="/"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          variant="inherit"
        >
          <ForwardRef(Typography)
            className="MuiLink-root MuiLink-underlineNone makeStyles-link-3 makeStyles-link-8"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter",
                "alignJustify": "MuiTypography-alignJustify",
                "alignLeft": "MuiTypography-alignLeft",
                "alignRight": "MuiTypography-alignRight",
                "body1": "MuiTypography-body1",
                "body2": "MuiTypography-body2",
                "button": "MuiTypography-button",
                "caption": "MuiTypography-caption",
                "colorError": "MuiTypography-colorError",
                "colorInherit": "MuiTypography-colorInherit",
                "colorPrimary": "MuiTypography-colorPrimary",
                "colorSecondary": "MuiTypography-colorSecondary",
                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                "displayBlock": "MuiTypography-displayBlock",
                "displayInline": "MuiTypography-displayInline",
                "gutterBottom": "MuiTypography-gutterBottom",
                "h1": "MuiTypography-h1",
                "h2": "MuiTypography-h2",
                "h3": "MuiTypography-h3",
                "h4": "MuiTypography-h4",
                "h5": "MuiTypography-h5",
                "h6": "MuiTypography-h6",
                "noWrap": "MuiTypography-noWrap",
                "overline": "MuiTypography-overline",
                "paragraph": "MuiTypography-paragraph",
                "root": "MuiTypography-root",
                "srOnly": "MuiTypography-srOnly",
                "subtitle1": "MuiTypography-subtitle1",
                "subtitle2": "MuiTypography-subtitle2",
              }
            }
            color="primary"
            component="a"
            href="/"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            variant="inherit"
          >
            <a
              className="MuiTypography-root MuiLink-root MuiLink-underlineNone makeStyles-link-3 makeStyles-link-8 MuiTypography-colorPrimary"
              href="/"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
            >
              Characters
            </a>
          </ForwardRef(Typography)>
        </WithStyles(ForwardRef(Typography))>
      </ForwardRef(Link)>
    </WithStyles(ForwardRef(Link))>
    <div
      className="makeStyles-exit-5 makeStyles-exit-9"
    >
      <ForwardRef
        onClick={[Function]}
      >
        <WithStyles(ForwardRef(SvgIcon))
          onClick={[Function]}
        >
          <ForwardRef(SvgIcon)
            classes={
              Object {
                "colorAction": "MuiSvgIcon-colorAction",
                "colorDisabled": "MuiSvgIcon-colorDisabled",
                "colorError": "MuiSvgIcon-colorError",
                "colorPrimary": "MuiSvgIcon-colorPrimary",
                "colorSecondary": "MuiSvgIcon-colorSecondary",
                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                "root": "MuiSvgIcon-root",
              }
            }
            onClick={[Function]}
          >
            <svg
              aria-hidden="true"
              className="MuiSvgIcon-root"
              focusable="false"
              onClick={[Function]}
              role="presentation"
              viewBox="0 0 24 24"
            >
              <path
                d="M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z"
              />
            </svg>
          </ForwardRef(SvgIcon)>
        </WithStyles(ForwardRef(SvgIcon))>
      </ForwardRef>
    </div>
  </div>
</div>
`;
