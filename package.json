{
  "name": "swapp-react-graphql-apollo",
  "version": "1.0.0",
  "engines": {
    "node": "10.15.3"
  },
  "private": true,
  "dependencies": {
    "@apollo/react-hooks": "^3.1.3",
    "@apollo/react-testing": "^3.1.3",
    "@material-ui/core": "^4.5.1",
    "@material-ui/icons": "^4.5.1",
    "apollo-boost": "^0.4.4",
    "apollo-link-context": "^1.0.19",
    "babel-plugin-module-resolver": "^3.2.0",
    "enzyme": "^3.10.0",
    "enzyme-adapter-react-16": "^1.15.1",
    "enzyme-to-json": "^3.4.3",
    "eslint": "^6.6.0",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-import-resolver-babel-module": "^5.1.0",
    "eslint-plugin-react": "^7.16.0",
    "graphql": "^14.5.8",
    "graphql.macro": "^1.4.2",
    "jest-junit": "^9.0.0",
    "node-sass": "^4.13.0",
    "prop-types": "^15.7.2",
    "react": "^16.11.0",
    "react-dom": "^16.11.0",
    "react-router-dom": "^5.1.2",
    "react-scripts": "3.2.0",
    "react-test-renderer": "^16.11.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "test:ci": "npm run lint && react-scripts test --watchAll=false --ci --coverage --coverageDirectory=test/coverage --reporters=default --reporters=jest-junit",
    "test:debug": "react-scripts --inspect-brk test --watchAll --passWithNoTests --runInBand --no-cache",
    "eject": "react-scripts eject",
    "lint": "eslint --ext .js src/"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "eslint:recommended",
      "plugin:react/recommended"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}",
      "!src/index.js",
      "!src/client/**/*.{js,jsx}"
    ]
  },
  "jest-junit": {
    "suiteName": "jest tests",
    "outputDirectory": "test-results/jest",
    "outputName": "results.xml",
    "classNameTemplate": "{classname} - {title}",
    "titleTemplate": "{classname} - {title}",
    "ancestorSeparator": " > ",
    "usePathForSuiteName": "true"
  }
}
